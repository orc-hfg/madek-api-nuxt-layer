/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiV2MetaKeysIdGet200Response
 */
export interface ApiV2MetaKeysIdGet200Response {
    /**
     * 
     * @type {object}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    descriptions: object | null;
    /**
     * 
     * @type {string}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    metaDatumObjectType?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    isExtensibleList?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    isEnabledForCollections?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    allowedRdfClass?: string | null;
    /**
     * 
     * @type {object}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    documentationUrls: object | null;
    /**
     * 
     * @type {string}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    vocabularyId: string;
    /**
     * 
     * @type {boolean}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    isEnabledForMediaEntries?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    position?: number;
    /**
     * 
     * @type {number}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    position2?: number;
    /**
     * 
     * @type {object}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    labels: object | null;
    /**
     * 
     * @type {object}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    hints: object | null;
    /**
     * 
     * @type {boolean}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    keywordsAlphabeticalOrder?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    enabledForPublicView?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    textType?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    allowedPeopleSubtypes?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    id2?: string;
    /**
     * 
     * @type {object}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    labels2?: object;
    /**
     * 
     * @type {object}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    descriptions2?: object;
    /**
     * 
     * @type {object}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    ioMappings?: object;
    /**
     * 
     * @type {boolean}
     * @memberof ApiV2MetaKeysIdGet200Response
     */
    enabledForPublicUse?: boolean;
}

/**
 * Check if a given object implements the ApiV2MetaKeysIdGet200Response interface.
 */
export function instanceOfApiV2MetaKeysIdGet200Response(value: object): value is ApiV2MetaKeysIdGet200Response {
    if (!('descriptions' in value) || value['descriptions'] === undefined) return false;
    if (!('documentationUrls' in value) || value['documentationUrls'] === undefined) return false;
    if (!('vocabularyId' in value) || value['vocabularyId'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('labels' in value) || value['labels'] === undefined) return false;
    if (!('hints' in value) || value['hints'] === undefined) return false;
    return true;
}

export function ApiV2MetaKeysIdGet200ResponseFromJSON(json: any): ApiV2MetaKeysIdGet200Response {
    return ApiV2MetaKeysIdGet200ResponseFromJSONTyped(json, false);
}

export function ApiV2MetaKeysIdGet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiV2MetaKeysIdGet200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'descriptions': json['descriptions'],
        'metaDatumObjectType': json['meta_datum_object_type'] == null ? undefined : json['meta_datum_object_type'],
        'isExtensibleList': json['is_extensible_list'] == null ? undefined : json['is_extensible_list'],
        'isEnabledForCollections': json['is_enabled_for_collections'] == null ? undefined : json['is_enabled_for_collections'],
        'allowedRdfClass': json['allowed_rdf_class'] == null ? undefined : json['allowed_rdf_class'],
        'documentationUrls': json['documentation_urls'],
        'vocabularyId': json['vocabulary_id'],
        'isEnabledForMediaEntries': json['is_enabled_for_media_entries'] == null ? undefined : json['is_enabled_for_media_entries'],
        'id': json['id'],
        'position': json['position'] == null ? undefined : json['position'],
        'position2': json['position_2'] == null ? undefined : json['position_2'],
        'labels': json['labels'],
        'hints': json['hints'],
        'keywordsAlphabeticalOrder': json['keywords_alphabetical_order'] == null ? undefined : json['keywords_alphabetical_order'],
        'enabledForPublicView': json['enabled_for_public_view'] == null ? undefined : json['enabled_for_public_view'],
        'textType': json['text_type'] == null ? undefined : json['text_type'],
        'allowedPeopleSubtypes': json['allowed_people_subtypes'] == null ? undefined : json['allowed_people_subtypes'],
        'id2': json['id_2'] == null ? undefined : json['id_2'],
        'labels2': json['labels_2'] == null ? undefined : json['labels_2'],
        'descriptions2': json['descriptions_2'] == null ? undefined : json['descriptions_2'],
        'ioMappings': json['io_mappings'] == null ? undefined : json['io_mappings'],
        'enabledForPublicUse': json['enabled_for_public_use'] == null ? undefined : json['enabled_for_public_use'],
    };
}

export function ApiV2MetaKeysIdGet200ResponseToJSON(json: any): ApiV2MetaKeysIdGet200Response {
    return ApiV2MetaKeysIdGet200ResponseToJSONTyped(json, false);
}

export function ApiV2MetaKeysIdGet200ResponseToJSONTyped(value?: ApiV2MetaKeysIdGet200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'descriptions': value['descriptions'],
        'meta_datum_object_type': value['metaDatumObjectType'],
        'is_extensible_list': value['isExtensibleList'],
        'is_enabled_for_collections': value['isEnabledForCollections'],
        'allowed_rdf_class': value['allowedRdfClass'],
        'documentation_urls': value['documentationUrls'],
        'vocabulary_id': value['vocabularyId'],
        'is_enabled_for_media_entries': value['isEnabledForMediaEntries'],
        'id': value['id'],
        'position': value['position'],
        'position_2': value['position2'],
        'labels': value['labels'],
        'hints': value['hints'],
        'keywords_alphabetical_order': value['keywordsAlphabeticalOrder'],
        'enabled_for_public_view': value['enabledForPublicView'],
        'text_type': value['textType'],
        'allowed_people_subtypes': value['allowedPeopleSubtypes'],
        'id_2': value['id2'],
        'labels_2': value['labels2'],
        'descriptions_2': value['descriptions2'],
        'io_mappings': value['ioMappings'],
        'enabled_for_public_use': value['enabledForPublicUse'],
    };
}

